//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gdc.Scd.Tests.Integration.BusinessLogicLayer.Model
{
    using System;
    using System.Collections.Generic;
    
    public partial class ReactionTime_ReactionType_Avalability
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public ReactionTime_ReactionType_Avalability()
        {
            this.MarkupOtherCosts = new HashSet<MarkupOtherCost>();
            this.MarkupStandardWaranties = new HashSet<MarkupStandardWaranty>();
            this.ProlongationMarkups = new HashSet<ProlongationMarkup>();
        }
    
        public long Id { get; set; }
        public Nullable<long> AvailabilityId { get; set; }
        public Nullable<long> ReactionTimeId { get; set; }
        public Nullable<long> ReactionTypeId { get; set; }
    
        public virtual Availability Availability { get; set; }
        public virtual ReactionTime ReactionTime { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MarkupOtherCost> MarkupOtherCosts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MarkupStandardWaranty> MarkupStandardWaranties { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ProlongationMarkup> ProlongationMarkups { get; set; }
        public virtual ReactionType ReactionType { get; set; }
    }
}
