//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gdc.Scd.Tests.Integration.BusinessLogicLayer.Model
{
    using System;
    using System.Collections.Generic;
    
    public partial class Country1
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Country1()
        {
            this.AvailabilityFees = new HashSet<AvailabilityFee>();
            this.UserRoles = new HashSet<UserRole>();
            this.HwFspCodeTranslations = new HashSet<HwFspCodeTranslation>();
            this.HwHddFspCodeTranslations = new HashSet<HwHddFspCodeTranslation>();
            this.AvailabilityFee1 = new HashSet<AvailabilityFee1>();
            this.FieldServiceCosts = new HashSet<FieldServiceCost>();
            this.InstallBases = new HashSet<InstallBase>();
            this.LogisticsCosts = new HashSet<LogisticsCost>();
            this.MarkupOtherCosts = new HashSet<MarkupOtherCost>();
            this.MarkupStandardWaranties = new HashSet<MarkupStandardWaranty>();
            this.MaterialCostOows = new HashSet<MaterialCostOow>();
            this.MaterialCostOowCalcs = new HashSet<MaterialCostOowCalc>();
            this.MaterialCostOowEmeias = new HashSet<MaterialCostOowEmeia>();
            this.ProActives = new HashSet<ProActive>();
            this.ProlongationMarkups = new HashSet<ProlongationMarkup>();
            this.RoleCodeHourlyRates = new HashSet<RoleCodeHourlyRate>();
            this.ServiceSupportCosts = new HashSet<ServiceSupportCost>();
            this.TaxAndDuties = new HashSet<TaxAndDuty>();
            this.Hardware_AvailabilityFee = new HashSet<Hardware_AvailabilityFee>();
            this.Hardware_FieldServiceCost = new HashSet<Hardware_FieldServiceCost>();
            this.Hardware_InstallBase = new HashSet<Hardware_InstallBase>();
            this.Hardware_LogisticsCosts = new HashSet<Hardware_LogisticsCosts>();
            this.Hardware_MarkupOtherCosts = new HashSet<Hardware_MarkupOtherCosts>();
            this.Hardware_MarkupStandardWaranty = new HashSet<Hardware_MarkupStandardWaranty>();
            this.Hardware_MaterialCostOow = new HashSet<Hardware_MaterialCostOow>();
            this.Hardware_MaterialCostOowEmeia = new HashSet<Hardware_MaterialCostOowEmeia>();
            this.Hardware_ProActive = new HashSet<Hardware_ProActive>();
            this.Hardware_ProlongationMarkup = new HashSet<Hardware_ProlongationMarkup>();
            this.Hardware_RoleCodeHourlyRates = new HashSet<Hardware_RoleCodeHourlyRates>();
            this.Hardware_ServiceSupportCost = new HashSet<Hardware_ServiceSupportCost>();
            this.SoftwareSolution_ProActiveSw = new HashSet<SoftwareSolution_ProActiveSw>();
            this.AvailabilityFeeCalcs = new HashSet<AvailabilityFeeCalc>();
            this.HwStandardWarranties = new HashSet<HwStandardWarranty>();
            this.CdCsConfigurations = new HashSet<CdCsConfiguration>();
            this.Countries = new HashSet<Country>();
            this.EmeiaCountries = new HashSet<EmeiaCountry>();
            this.NonEmeiaCountries = new HashSet<NonEmeiaCountry>();
            this.LocalPortfolios = new HashSet<LocalPortfolio>();
            this.ProActiveSws = new HashSet<ProActiveSw>();
        }
    
        public long Id { get; set; }
        public bool AssignedToMultiVendor { get; set; }
        public bool CanOverrideTransferCostAndPrice { get; set; }
        public bool CanStoreListAndDealerPrices { get; set; }
        public Nullable<long> ClusterRegionId { get; set; }
        public Nullable<long> CountryGroupId { get; set; }
        public long CurrencyId { get; set; }
        public string ISO3CountryCode { get; set; }
        public bool IsMaster { get; set; }
        public string Name { get; set; }
        public string QualityGateGroup { get; set; }
        public Nullable<long> RegionId { get; set; }
        public string SAPCountryCode { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AvailabilityFee> AvailabilityFees { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<UserRole> UserRoles { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<HwFspCodeTranslation> HwFspCodeTranslations { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<HwHddFspCodeTranslation> HwHddFspCodeTranslations { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AvailabilityFee1> AvailabilityFee1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FieldServiceCost> FieldServiceCosts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<InstallBase> InstallBases { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LogisticsCost> LogisticsCosts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MarkupOtherCost> MarkupOtherCosts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MarkupStandardWaranty> MarkupStandardWaranties { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MaterialCostOow> MaterialCostOows { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MaterialCostOowCalc> MaterialCostOowCalcs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MaterialCostOowEmeia> MaterialCostOowEmeias { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ProActive> ProActives { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ProlongationMarkup> ProlongationMarkups { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<RoleCodeHourlyRate> RoleCodeHourlyRates { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ServiceSupportCost> ServiceSupportCosts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TaxAndDuty> TaxAndDuties { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Hardware_AvailabilityFee> Hardware_AvailabilityFee { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Hardware_FieldServiceCost> Hardware_FieldServiceCost { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Hardware_InstallBase> Hardware_InstallBase { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Hardware_LogisticsCosts> Hardware_LogisticsCosts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Hardware_MarkupOtherCosts> Hardware_MarkupOtherCosts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Hardware_MarkupStandardWaranty> Hardware_MarkupStandardWaranty { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Hardware_MaterialCostOow> Hardware_MaterialCostOow { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Hardware_MaterialCostOowEmeia> Hardware_MaterialCostOowEmeia { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Hardware_ProActive> Hardware_ProActive { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Hardware_ProlongationMarkup> Hardware_ProlongationMarkup { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Hardware_RoleCodeHourlyRates> Hardware_RoleCodeHourlyRates { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Hardware_ServiceSupportCost> Hardware_ServiceSupportCost { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SoftwareSolution_ProActiveSw> SoftwareSolution_ProActiveSw { get; set; }
        public virtual ClusterRegion1 ClusterRegion1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AvailabilityFeeCalc> AvailabilityFeeCalcs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<HwStandardWarranty> HwStandardWarranties { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CdCsConfiguration> CdCsConfigurations { get; set; }
        public virtual CountryGroup CountryGroup { get; set; }
        public virtual Currency Currency { get; set; }
        public virtual Region Region { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Country> Countries { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmeiaCountry> EmeiaCountries { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<NonEmeiaCountry> NonEmeiaCountries { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LocalPortfolio> LocalPortfolios { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ProActiveSw> ProActiveSws { get; set; }
    }
}
