
/**
 * 
 * Small helper class to make creating Ext.data.Stores from different domain JSON
 * data easier.
 * 
 * A JsonPStore will be automatically configured with a Ext.data.reader.Json and a
 * Ext.data.proxy.JsonP.
 * 
 * A store configuration would be something like:
 * 
 *    var store = new Ext.data.JsonPStore({
 *        // store configs
 *        storeId: 'myStore',
 * 
 *        // proxy configs
 *        url: 'get-images.php',
 * 
 *        // reader configs
 *        root: 'images',
 *        fields: ['name', 'url', {name:'size', type: 'float'}, {name:'lastmod', type:'date'}]
 *    });
 * 
 * 
 * This store is configured to consume a returned object of the form:
 * 
 *    stcCallback({
 *        images: [
 *            {name: 'Image one', url:'/GetImage.php?id=1', size:46.5, lastmod: new Date(2007, 10, 29)},
 *            {name: 'Image Two', url:'/GetImage.php?id=2', size:43.2, lastmod: new Date(2007, 10, 30)}
 *        ]
 *    })
 * 
 * Where stcCallback is the callback name passed in the request to the remote domain. See {
 * 
 * An object literal of this form could also be used as the cfg-data config option.
 * 
 */
export const jsonpstore = 'jsonpstore';