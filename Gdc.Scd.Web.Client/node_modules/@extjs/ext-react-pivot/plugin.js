
/**
 * This plugin allows the end user to configure the pivot component.
 * 
 * It adds the following methods to the pivot grid:
 * - showConfigurator: which when called will show the configurator panel
 * - hideConfigurator: which when called will hide the configurator panel
 * 
 * The configurator panel will be shown when the end-user does a `longpress` event
 * on the column headers.
 * 
 */
export const pivotconfigurator = 'pivotconfigurator';

/**
 * This plugin allows the user to view all records that were aggregated for a specified cell.
 * 
 * The user has to double click that cell to open the records viewer.
 * 
 * **Note:** If a Ext.pivot.matrix.Remote matrix is used then the plugin requires
 * a remoteStore to be provided to fetch the records for a left/top keys pair.
 * 
 */
export const pivotdrilldown = 'pivotdrilldown';

/**
 * 
 * This plugin allows pivot grid data export using various exporters. Each exporter should extend
 * the Ext.exporter.Base class.
 * 
 * Two new methods are created on the pivot grid by this plugin:
 * 
 *  - saveDocumentAs(config): saves the document
 *  - getDocumentData(config): returns the document content
 * 
 * Example usage:
 * 
 * 
 *      {
 *          xtype: 'pivotgrid',
 *          plugins: 'pivotexporter'
 *      }
 * 
 *      pivot.saveDocumentAs({
 *          type: 'xlsx',
 *          title: 'My export',
 *          fileName: 'myExport.xlsx'
 *      });
 * 
 * 
 * When the exported data needs to be formatted then the Ext.pivot.dimension.Item#exportStyle
 * can be used on either left axis or aggregate dimensions.
 * 
 *      {
 *          xtype: 'pivotgrid',
 * 
 *          matrix: {
 *              aggregate: [{
 *                  dataIndex:  'value',
 *                  header:     'Total',
 *                  aggregator: 'sum',
 *                  exportStyle: {
 *                      format: 'Currency',
 *                      alignment: {
 *                          horizontal: 'Right'
 *                      }
 *                  }
 *              }],
 * 
 *              leftAxis: [{
 *                  dataIndex:  'date',
 *                  header:     'Transaction date',
 *                  exportStyle: {
 *                      format: 'Short Date',
 *                      alignment: {
 *                          horizontal: 'Right'
 *                      }
 *                  }
 *              },{
 *                  dataIndex:  'company',
 *                  header:     'Company',
 *                  sortable:   false
 *              }]
 *          }
 *          // ...
 *      }
 * 
 */
export const pivotexporter = 'pivotexporter';

/**
 * 
 * This plugin allows pivot grid data export using various exporters. Each exporter should extend
 * the Ext.exporter.Base class.
 * 
 * Two new methods are created on the pivot grid by this plugin:
 * 
 *  - saveDocumentAs(config): saves the document
 *  - getDocumentData(config): returns the document content
 * 
 * Example usage:
 * 
 * 
 *      {
 *          xtype: 'pivotgrid',
 *          plugins: 'pivotexporter'
 *      }
 * 
 *      pivot.saveDocumentAs({
 *          type: 'xlsx',
 *          title: 'My export',
 *          fileName: 'myExport.xlsx'
 *      });
 * 
 * 
 * When the exported data needs to be formatted then the Ext.pivot.dimension.Item#exportStyle
 * can be used on either left axis or aggregate dimensions.
 * 
 *      {
 *          xtype: 'pivotgrid',
 * 
 *          matrix: {
 *              aggregate: [{
 *                  dataIndex:  'value',
 *                  header:     'Total',
 *                  aggregator: 'sum',
 *                  exportStyle: {
 *                      format: 'Currency',
 *                      alignment: {
 *                          horizontal: 'Right'
 *                      }
 *                  }
 *              }],
 * 
 *              leftAxis: [{
 *                  dataIndex:  'date',
 *                  header:     'Transaction date',
 *                  exportStyle: {
 *                      format: 'Short Date',
 *                      alignment: {
 *                          horizontal: 'Right'
 *                      }
 *                  }
 *              },{
 *                  dataIndex:  'company',
 *                  header:     'Company',
 *                  sortable:   false
 *              }]
 *          }
 *          // ...
 *      }
 * 
 */
export const mzexcelexport = 'mzexcelexport';

/**
 * This plugin allows the user to modify records behind a pivot cell.
 * 
 * The user has to double click that cell to open the range editor window.
 * 
 * The following types of range editing are available:
 * 
 * - `percentage`: the user fills in a percentage that is applied to each record.
 * - `increment`:  the user fills in a value that is added to each record.
 * - `overwrite`:  the new value filled in by the user overwrites each record.
 * - `uniform`:  replace sum of values with a provided value using uniform distribution
 * 
 * More pivot updater types can be defined by extending Ext.pivot.update.Base.
 * 
 * **Note:** Only works when using a Ext.pivot.matrix.Local matrix on a pivot grid.
 * 
 */
export const pivotrangeeditor = 'pivotrangeeditor';