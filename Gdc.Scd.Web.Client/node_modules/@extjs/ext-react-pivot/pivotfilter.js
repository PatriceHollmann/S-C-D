
/**
 * Base implementation of a filter. It handles common type of filters.
 * 
 */
export const base = 'base';

/**
 * 
 * Label filter class. Use this filter type when you want to filter
 * the left/top axis results by their values.
 * 
 * Example:
 * 
 *      {
 *          xtype: 'pivotgrid',
 * 
 *          matrix: {
 *              // This example will generate a grid column for the year 2012
 *              // instead of columns for all unique years.
 *              topAxis: [{
 *                  dataIndex:  'year',
 *                  header:     'Year',
 *                  filter: {
 *                      type:       'label',
 *                      operator:   '=',
 *                      value:      2012
 *                  }
 *              }]
 * 
 *              leftAxis: [{
 *                  dataIndex:  'country',
 *                  header:     'Country',
 *                  filter: {
 *                      type:       'label',
 *                      operator:   'in',
 *                      value:      ['USA', 'Canada', 'Australia']
 *                  }
 *              }]
 *          }
 *      }
 * 
 */
export const label = 'label';

/**
 * 
 * Value filter class. Use this filter type when you want to filter
 * the left/top axis results by the grand total summary values.
 * 
 * Example for a value filter:
 * 
 *      {
 *          xtype: 'pivotgrid',
 * 
 *          matrix: {
 *              // This example will generate a column for each year
 *              // that has its grand total value between 1,000 and 15,000.
 *              aggregate: [{
 *                  id:         'agg',
 *                  dataIndex:  'value',
 *                  aggregator: 'sum',
 *                  header:     'Total'
 *              }],
 *              topAxis: [{
 *                  dataIndex:  'year',
 *                  header:     'Year',
 *                  filter: {
 *                      type:           'value',
 *                      operator:       'between',
 *                      dimensionId:    'agg',  // this is the id of an aggregate dimension
 *                      value:          [1000, 15000]
 *                  }
 *              }]
 *          }
 *      }
 * 
 * Top 10 filter works as following:
 * 
 * First of all sort axis groups by grand total value of the specified dimension. The sorting
 * order depends on top/bottom configuration.
 * 
 *  - Top/Bottom 10 Items: Keep only the top x items from the groups array
 * 
 *  - Top/Bottom 10 Percent: Find first combined values to total at least x percent of the parent grandtotal
 * 
 *  - Top/Bottom 10 Sum: Find first combined values to total at least x
 * 
 * 
 * Example for a top 10 value filter:
 * 
 *      {
 *          xtype: 'pivotgrid',
 * 
 *          matrix: {
 *              // This example will return the bottom 3 years that have the smallest
 *              // sum of value.
 *              aggregate: [{
 *                  id:         'agg',
 *                  dataIndex:  'value',
 *                  aggregator: 'sum',
 *                  header:     'Total'
 *              }],
 *              leftAxis: [{
 *                  dataIndex:  'year',
 *                  header:     'Year',
 *                  filter: {
 *                      type:           'value',
 *                      operator:       'top10',
 *                      dimensionId:    'agg',   // this is the id of an aggregate dimension
 *                      topType:        'items',
 *                      topOrder:       'bottom',
 *                      value:          3
 *                  }
 *              }]
 *          }
 *      }
 * 
 */
export const value = 'value';