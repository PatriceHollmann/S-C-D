
/**
 * 
 * A superclass for a validator that checks if a value is within a certain range.
 * 
 */
export const bound = 'bound';

/**
 * 
 * Validates that the value is a valid CIDR block.
 * 
 * Works for both IPV4 only.
 * 
 */
export const cidrv4 = 'cidrv4';

/**
 * 
 * Validates that the value is a valid CIDR block.
 * 
 * Works for both IPV6 only.
 * 
 */
export const cidrv6 = 'cidrv6';

/**
 * Validates that the value is a valid U.S. currency value.
 * 
 */
export const currency = 'currency';

/**
 * 
 * Validates that the value is a valid U.S. currency value.
 * 
 * A valid number may include a leading + or -, dollar sign, comma separators, and a single decimal point.
 * Both $-100 and -$100 are valid.  If a decimal point is present, two digits must follow.
 * 
 */
export const currency_us = 'currency-us';

/**
 * 
 * Validates that the value is a valid date.
 * 
 */
export const date = 'date';

/**
 * 
 * Validates that the value is a valid date with time.
 * 
 */
export const datetime = 'datetime';

/**
 * 
 * Validates that the value is a valid email.
 * 
 */
export const email = 'email';

/**
 * 
 * Validates that the value does not exist in a list of values.
 * 
 */
export const exclusion = 'exclusion';

/**
 * 
 * Validates that the passed value matches a specific format specified by a regex.
 * The format is provided by the matcher config.
 * 
 */
export const format = 'format';

/**
 * 
 * Validates that the value exists in a list of values.
 * 
 */
export const inclusion = 'inclusion';

/**
 * 
 * Validates that the value is a valid IP address.
 * 
 * Works for both IPV4 and IPV6.
 * 
 */
export const ipaddress = 'ipaddress';

/**
 * Validates that the length of the value is between a min and max.
 * 
 */
export const length = 'length';

/**
 * 
 * A superclass for inclusion/exclusion validators.
 * 
 */
export const list = 'list';

/**
 * Validates that the passed value is not `null` or `undefined`.
 * 
 */
export const notnull = 'notnull';

/**
 * 
 * Validates that the value is a valid number.
 * 
 * A valid number may include a leading + or -, comma separators, and a single decimal point.
 * 
 */
export const number = 'number';

/**
 * Validates that the value is a valid phone.
 * 
 */
export const phone = 'phone';

/**
 * 
 * Validates that the passed value is not `null` or `undefined` or `''`.
 * 
 */
export const presence = 'presence';

/**
 * 
 * Validates that the the value is between a min and max.
 * 
 */
export const range = 'range';

/**
 * 
 * Validates that the value is a valid time.
 * 
 */
export const time = 'time';

/**
 * 
 * Validates that the value is a proper URL.
 * 
 */
export const url = 'url';

/**
 * 
 * The base class for validators to be used to validate fields in
 * a Ext.data.Model.
 * 
 * The model will call the validate method, which may be overridden by subclasses.
 * 
 */
export const base = 'base';